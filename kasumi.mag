function_name := function(params)
    /* TODO: implement function_name */
end function;

function XOR(x,y)
	return [(EuclideanNorm(x[i]-y[i])) : i in [1..#x]];
end function;

function FO (I, KO, KI)

	L := I[1..16];
	R := I[17..32];

	KOi := [];

	KOi := Append(KOi, KO[1..16]);
	KOi := Append(KOi, KO[17..32]);
	KOi := Append(KOi, KO[33..48]);

	KIi := [];

	KIi := Append(KIi, KI[1..16]);
	KIi := Append(KIi, KI[17..32]);
	KIi := Append(KIi, KI[33..48]);

	for j in [1..3] do
		PrevR := R;
		PrevL := L;

		R := XOR(FI( XOR(PrevL, KOi[j]), KIi[j]), PrevR);
		L := PrevR;
	end for;

	return L cat R;

end function;